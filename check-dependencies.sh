#!/bin/bash

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π FishTrackPro..."
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
check_command() {
    if command -v $1 &> /dev/null; then
        echo -e "${GREEN}‚úÖ $1${NC} - $(command -v $1)"
        return 0
    else
        echo -e "${RED}‚ùå $1${NC} - –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–∏
check_version() {
    if command -v $1 &> /dev/null; then
        version=$($1 --version 2>/dev/null | head -n1)
        echo -e "${GREEN}‚úÖ $1${NC} - $version"
        return 0
    else
        echo -e "${RED}‚ùå $1${NC} - –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

echo "üìã –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:"
echo "========================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP
echo ""
echo "üêò PHP:"
if check_version "php"; then
    php_version=$(php -r "echo PHP_VERSION;")
    if [[ $(echo "$php_version 8.2" | awk '{print ($1 >= $2)}') == 1 ]]; then
        echo -e "   ${GREEN}‚úÖ –í–µ—Ä—Å–∏—è PHP $php_version –ø–æ–¥—Ö–æ–¥–∏—Ç${NC}"
    else
        echo -e "   ${YELLOW}‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è PHP 8.2+, —Ç–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $php_version${NC}"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Composer
echo ""
echo "üì¶ Composer:"
check_version "composer"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
echo ""
echo "üü¢ Node.js:"
if check_version "node"; then
    node_version=$(node --version | sed 's/v//')
    if [[ $(echo "$node_version 18.0" | awk '{print ($1 >= $2)}') == 1 ]]; then
        echo -e "   ${GREEN}‚úÖ –í–µ—Ä—Å–∏—è Node.js $node_version –ø–æ–¥—Ö–æ–¥–∏—Ç${NC}"
    else
        echo -e "   ${YELLOW}‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Node.js 18+, —Ç–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $node_version${NC}"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
echo ""
echo "üì¶ npm:"
check_version "npm"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ MySQL
echo ""
echo "üóÑÔ∏è  MySQL:"
check_command "mysql"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
echo ""
echo "üî¥ Redis:"
check_command "redis-server"

echo ""
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:"
echo "=============================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–æ–∫
if [ -d "backend" ]; then
    echo -e "${GREEN}‚úÖ –ü–∞–ø–∫–∞ backend${NC}"
else
    echo -e "${RED}‚ùå –ü–∞–ø–∫–∞ backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

if [ -d "frontend" ]; then
    echo -e "${GREEN}‚úÖ –ü–∞–ø–∫–∞ frontend${NC}"
else
    echo -e "${RED}‚ùå –ü–∞–ø–∫–∞ frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
if [ -f "backend/composer.json" ]; then
    echo -e "${GREEN}‚úÖ backend/composer.json${NC}"
else
    echo -e "${RED}‚ùå backend/composer.json –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

if [ -f "frontend/package.json" ]; then
    echo -e "${GREEN}‚úÖ frontend/package.json${NC}"
else
    echo -e "${RED}‚ùå frontend/package.json –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

echo ""
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:"
echo "======================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ -d "backend/vendor" ]; then
    echo -e "${GREEN}‚úÖ Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd backend && composer install"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ -d "frontend/node_modules" ]; then
    echo -e "${GREEN}‚úÖ Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd frontend && npm install"
fi

echo ""
echo "‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
echo "========================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if [ -f "backend/.env" ]; then
    echo -e "${GREEN}‚úÖ backend/.env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if grep -q "APP_KEY=" backend/.env && ! grep -q "APP_KEY=$" backend/.env; then
        echo -e "${GREEN}‚úÖ APP_KEY –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  APP_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
        echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd backend && php artisan key:generate"
    fi
    
    if grep -q "DB_DATABASE=" backend/.env; then
        echo -e "${GREEN}‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  backend/.env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    echo "   –°–∫–æ–ø–∏—Ä—É–π—Ç–µ: cp backend/env.example backend/.env"
fi

echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
echo "=================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
check_port() {
    if lsof -i :$1 &> /dev/null; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ü–æ—Ä—Ç $1 –∑–∞–Ω—è—Ç${NC}"
        return 1
    else
        echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç $1 —Å–≤–æ–±–æ–¥–µ–Ω${NC}"
        return 0
    fi
}

check_port 8000  # Laravel
check_port 3000  # React dev server
check_port 3306  # MySQL
check_port 6379  # Redis

echo ""
echo "üìä –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞:"
echo "=================="

# –ü–æ–¥—Å—á–µ—Ç –æ—à–∏–±–æ–∫
errors=0
warnings=0

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if ! command -v php &> /dev/null; then ((errors++)); fi
if ! command -v composer &> /dev/null; then ((errors++)); fi
if ! command -v node &> /dev/null; then ((errors++)); fi
if ! command -v npm &> /dev/null; then ((errors++)); fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
if [ ! -d "backend" ]; then ((errors++)); fi
if [ ! -d "frontend" ]; then ((errors++)); fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ ! -d "backend/vendor" ]; then ((warnings++)); fi
if [ ! -d "frontend/node_modules" ]; then ((warnings++)); fi

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
if [ $errors -eq 0 ]; then
    if [ $warnings -eq 0 ]; then
        echo -e "${GREEN}üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
        echo -e "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è ($warnings)${NC}"
        echo -e "${YELLOW}üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏${NC}"
    fi
else
    echo -e "${RED}‚ùå –ù–∞–π–¥–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ ($errors)${NC}"
    echo -e "${RED}üö´ –ü—Ä–æ–µ–∫—Ç –Ω–µ –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É${NC}"
fi

echo ""
echo "üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "=================="

if [ $errors -gt 0 ]; then
    echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–Ω–æ–≤–∞"
elif [ $warnings -gt 0 ]; then
    echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./install.sh"
    echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª"
    echo "3. –°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
    echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏"
else
    echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª (–µ—Å–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)"
    echo "2. –°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
    echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: cd backend && php artisan migrate"
    echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ backend: cd backend && php artisan serve"
    echo "5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ frontend: cd frontend && npm run dev"
fi

echo ""
echo "üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "============================"
echo "‚Ä¢ README.md - –æ–±—â–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
echo "‚Ä¢ DEPLOYMENT.md - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é"
echo "‚Ä¢ FIXES.md - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫"

