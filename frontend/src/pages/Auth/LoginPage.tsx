import React, { useState } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import TextInput from '../../components/Form/Text';
import { login, oauthRedirect } from '../../api';
import config from '../../config';

const LoginPage: React.FC = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    email: '',
    password: '',
  });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError(null);

    try {
      const response = await login(formData);
      localStorage.setItem('token', response.token);
      navigate(config.routes.feed);
    } catch (err: any) {
      setError(err.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞');
    } finally {
      setLoading(false);
    }
  };

  const handleOAuthLogin = (provider: string) => {
    window.location.href = oauthRedirect(provider);
  };

  return (
    <div className="screen auth-screen">
      <div className="auth-container glass">
        <div className="auth-header">
          <h1>–í—Ö–æ–¥ –≤ FishTrackPro</h1>
          <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!</p>
        </div>

        <form onSubmit={handleSubmit} className="auth-form">
          {error && <div className="error-message">{error}</div>}

          <TextInput
            label="Email"
            type="email"
            value={formData.email}
            onChange={(value) => setFormData(prev => ({ ...prev, email: value }))}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
            required
            icon="email"
          />

          <TextInput
            label="–ü–∞—Ä–æ–ª—å"
            type="password"
            value={formData.password}
            onChange={(value) => setFormData(prev => ({ ...prev, password: value }))}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
            required
            icon="lock"
          />

          <button
            type="submit"
            className="btn btn-primary btn-full"
            disabled={loading}
          >
            {loading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
          </button>
        </form>

        <div className="auth-divider">
          <span>–∏–ª–∏</span>
        </div>

        <div className="oauth-buttons">
          {config.features.auth.providers.google && (
            <button
              className="oauth-button google"
              onClick={() => handleOAuthLogin('google')}
            >
              <span className="oauth-icon">G</span>
              –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google
            </button>
          )}

          {config.features.auth.providers.vk && (
            <button
              className="oauth-button vk"
              onClick={() => handleOAuthLogin('vk')}
            >
              <span className="oauth-icon">VK</span>
              –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ VK
            </button>
          )}

          {config.features.auth.providers.yandex && (
            <button
              className="oauth-button yandex"
              onClick={() => handleOAuthLogin('yandex')}
            >
              <span className="oauth-icon">–Ø</span>
              –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å
            </button>
          )}

          {config.features.auth.providers.apple && (
            <button
              className="oauth-button apple"
              onClick={() => handleOAuthLogin('apple')}
            >
              <span className="oauth-icon">üçé</span>
              –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Apple
            </button>
          )}
        </div>

        <div className="auth-footer">
          <p>
            –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{' '}
            <Link to={config.routes.auth.register} className="auth-link">
              –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
            </Link>
          </p>
        </div>
      </div>
    </div>
  );
};

export default LoginPage;

